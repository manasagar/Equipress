"use client";

import {
  createContext,
  useContext,
  useState,
  useEffect,
  type ReactNode,
} from "react";

export type Language = {
  code: string;
  name: string;
  flag: string;
};

export const languages: Language[] = [
  { code: "en", name: "English", flag: "üá∫üá∏" },
  { code: "es", name: "Espa√±ol", flag: "üá™üá∏" },
  { code: "fr", name: "Fran√ßais", flag: "üá´üá∑" },
  { code: "de", name: "Deutsch", flag: "üá©üá™" },
  { code: "zh", name: "‰∏≠Êñá", flag: "üá®üá≥" },
  { code: "ar", name: "ÿßŸÑÿπÿ±ÿ®Ÿäÿ©", flag: "üá∏üá¶" },
  { code: "hi", name: "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä", flag: "üáÆüá≥" },
  { code: "ru", name: "–†—É—Å—Å–∫–∏–π", flag: "üá∑üá∫" },
];

type LanguageContextType = {
  currentLanguage: Language;
  setLanguage: (language: Language) => void;
  formatDate: (date: Date | string) => string;
  formatNumber: (num: number) => string;
  translate: (key: string) => string;
};

const LanguageContext = createContext<LanguageContextType | undefined>(
  undefined
);

// Expanded translations for the application
const translations: Record<string, Record<string, string>> = {
  en: {
    // Navigation
    home: "Home",
    news: "News",
    about: "About",
    login: "Login",
    logout: "Logout",
    dashboard: "Dashboard",
    profile: "Profile",

    // Dashboard
    analysisQueue: "Analysis Queue",
    validationQueue: "Validation Queue",
    analyzeArticle: "Analyze Article",
    validateArticle: "Validate Article",

    // Article Analysis
    analyzeThisArticle: "Analyze This Article",
    rateArticleAccuracy:
      "Rate the article's accuracy and provide your expert analysis",
    accuracyRating: "Accuracy Rating",
    inaccurate: "Inaccurate",
    accurate: "Accurate",
    analysisComments: "Analysis Comments",
    provideDetailedAnalysis:
      "Provide your detailed analysis of the article's accuracy, sources, and any potential biases or omissions...",
    sourceEvaluation: "Source Evaluation",
    evaluateSourceCredibility:
      "Evaluate the credibility and relevance of the sources cited in the article...",
    submitAnalysis: "Submit Analysis",
    submittingAnalysis: "Submitting Analysis...",
    analysisVisibleToValidators:
      "Your analysis will be visible to validators and will influence the verification status of this article.",
    beThoroughAndObjective:
      "Please be thorough and objective in your assessment.",

    // Article Validation
    castYourVote: "Cast Your Vote",
    basedOnArticleAndAnalyses:
      "Based on the article and expert analyses, is this article true or false?",
    currentConsensus: "Current Consensus",
    trueArticleAccurate: "True - The article is accurate",
    falseArticleInaccurate:
      "False - The article contains significant inaccuracies",
    additionalComments: "Additional Comments",
    optional: "Optional",
    provideAdditionalComments:
      "Provide any additional comments to support your vote...",
    submitVote: "Submit Vote",
    submittingVote: "Submitting Vote...",
    voteContributesToVerification:
      "Your vote will contribute to the final verification status of this article.",
    considerAllEvidence:
      "Please consider all available evidence before casting your vote.",

    // Token Economy
    earnTokens: "Earn Tokens",
    qualityAnalysisRewards:
      "Quality analyses earn more tokens. Higher accuracy ratings and detailed comments increase your rewards.",
    validationRewardsExplanation:
      "Your vote earns tokens based on your stake and reputation. Consensus with other validators increases rewards.",
    analysisSubmitted: "Analysis Submitted",
    yourAnalysisHasBeenSubmitted:
      "Your analysis has been submitted and is now available for validators to review.",
    validationSubmitted: "Validation Submitted",
    yourVoteHasBeenRecorded:
      "Your vote has been recorded and will contribute to the article's verification status.",
    youEarned: "You Earned",
    stakingOpportunity: "Staking Opportunity",
    stakeTokensForMoreInfluence:
      "Stake your tokens to increase your influence in the verification process and earn higher rewards.",
    stakeMoreTokensForGreaterRewards:
      "Stake more tokens to increase your voting power and earn greater rewards.",
    claimReward: "Claim Reward",
    analyzeAnotherArticle: "Analyze Another Article",
    validateAnotherArticle: "Validate Another Article",

    // Token Economy Component
    tokenEconomy: "Token Economy",
    manageTokensAndStaking: "Manage your ETH tokens and staking",
    balance: "Balance",
    staked: "Staked",
    rewards: "Rewards",
    stakingAPY: "Staking APY",
    stake: "Stake",
    unstake: "Unstake",
    amountToStake: "Amount to Stake",
    amountToUnstake: "Amount to Unstake",
    stakingIncreasesInfluence:
      "Staking increases your influence in the verification process and earns rewards.",
    unstakingReducesInfluence:
      "Unstaking reduces your influence but allows you to use your tokens elsewhere.",
    availableRewards: "Available Rewards",
    rewardsEarnedBasedOn:
      "Rewards are earned based on your staking amount and platform contributions.",
    claimRewards: "Claim Rewards",
    lastUpdated: "Last updated",
    viewHistory: "View History",
    success: "Success",
    error: "Error",
    pendingRewardsClaimed: "Pending rewards claimed",

    // General
    sources: "Sources",
    expertAnalyses: "Expert Analyses",
    credibilityScore: "Credibility Score",
    rating: "rating",
    analyzed: "Analyzed",
  },
  es: {
    // Navigation
    home: "Inicio",
    news: "Noticias",
    about: "Acerca de",
    login: "Iniciar sesi√≥n",
    logout: "Cerrar sesi√≥n",
    dashboard: "Panel",
    profile: "Perfil",

    // Dashboard
    analysisQueue: "Cola de an√°lisis",
    validationQueue: "Cola de validaci√≥n",
    analyzeArticle: "Analizar art√≠culo",
    validateArticle: "Validar art√≠culo",

    // Article Analysis
    analyzeThisArticle: "Analizar este art√≠culo",
    rateArticleAccuracy:
      "Califica la precisi√≥n del art√≠culo y proporciona tu an√°lisis experto",
    accuracyRating: "Calificaci√≥n de precisi√≥n",
    inaccurate: "Impreciso",
    accurate: "Preciso",
    analysisComments: "Comentarios de an√°lisis",
    provideDetailedAnalysis:
      "Proporciona tu an√°lisis detallado sobre la precisi√≥n del art√≠culo, las fuentes y cualquier posible sesgo u omisi√≥n...",
    sourceEvaluation: "Evaluaci√≥n de fuentes",
    evaluateSourceCredibility:
      "Eval√∫a la credibilidad y relevancia de las fuentes citadas en el art√≠culo...",
    submitAnalysis: "Enviar an√°lisis",
    submittingAnalysis: "Enviando an√°lisis...",
    analysisVisibleToValidators:
      "Tu an√°lisis ser√° visible para los validadores e influir√° en el estado de verificaci√≥n de este art√≠culo.",
    beThoroughAndObjective:
      "Por favor, s√© minucioso y objetivo en tu evaluaci√≥n.",

    // Article Validation
    castYourVote: "Emite tu voto",
    basedOnArticleAndAnalyses:
      "Basado en el art√≠culo y los an√°lisis de expertos, ¬øes este art√≠culo verdadero o falso?",
    currentConsensus: "Consenso actual",
    trueArticleAccurate: "Verdadero - El art√≠culo es preciso",
    falseArticleInaccurate:
      "Falso - El art√≠culo contiene imprecisiones significativas",
    additionalComments: "Comentarios adicionales",
    optional: "Opcional",
    provideAdditionalComments:
      "Proporciona cualquier comentario adicional para respaldar tu voto...",
    submitVote: "Enviar voto",
    submittingVote: "Enviando voto...",
    voteContributesToVerification:
      "Tu voto contribuir√° al estado de verificaci√≥n final de este art√≠culo.",
    considerAllEvidence:
      "Por favor, considera toda la evidencia disponible antes de emitir tu voto.",

    // Token Economy
    earnTokens: "Gana tokens",
    qualityAnalysisRewards:
      "Los an√°lisis de calidad ganan m√°s tokens. Las calificaciones de mayor precisi√≥n y los comentarios detallados aumentan tus recompensas.",
    validationRewardsExplanation:
      "Tu voto gana tokens seg√∫n tu participaci√≥n y reputaci√≥n. El consenso con otros validadores aumenta las recompensas.",
    analysisSubmitted: "An√°lisis enviado",
    yourAnalysisHasBeenSubmitted:
      "Tu an√°lisis ha sido enviado y ahora est√° disponible para que los validadores lo revisen.",
    validationSubmitted: "Validaci√≥n enviada",
    yourVoteHasBeenRecorded:
      "Tu voto ha sido registrado y contribuir√° al estado de verificaci√≥n del art√≠culo.",
    youEarned: "Has ganado",
    stakingOpportunity: "Oportunidad de staking",
    stakeTokensForMoreInfluence:
      "Haz staking de tus tokens para aumentar tu influencia en el proceso de verificaci√≥n y ganar mayores recompensas.",
    stakeMoreTokensForGreaterRewards:
      "Haz staking de m√°s tokens para aumentar tu poder de voto y ganar mayores recompensas.",
    claimReward: "Reclamar recompensa",
    analyzeAnotherArticle: "Analizar otro art√≠culo",
    validateAnotherArticle: "Validar otro art√≠culo",

    // Token Economy Component
    tokenEconomy: "Econom√≠a de tokens",
    manageTokensAndStaking: "Administra tus tokens ETH y staking",
    balance: "Saldo",
    staked: "En staking",
    rewards: "Recompensas",
    stakingAPY: "APY de staking",
    stake: "Hacer staking",
    unstake: "Retirar staking",
    amountToStake: "Cantidad para hacer staking",
    amountToUnstake: "Cantidad para retirar",
    stakingIncreasesInfluence:
      "El staking aumenta tu influencia en el proceso de verificaci√≥n y genera recompensas.",
    unstakingReducesInfluence:
      "Retirar el staking reduce tu influencia pero te permite usar tus tokens en otro lugar.",
    availableRewards: "Recompensas disponibles",
    rewardsEarnedBasedOn:
      "Las recompensas se obtienen seg√∫n tu cantidad en staking y contribuciones a la plataforma.",
    claimRewards: "Reclamar recompensas",
    lastUpdated: "√öltima actualizaci√≥n",
    viewHistory: "Ver historial",
    success: "√âxito",
    error: "Error",
    pendingRewardsClaimed: "Recompensas pendientes reclamadas",

    // General
    sources: "Fuentes",
    expertAnalyses: "An√°lisis de expertos",
    credibilityScore: "Puntuaci√≥n de credibilidad",
    rating: "calificaci√≥n",
    analyzed: "Analizado",
  },
  fr: {
    // Navigation
    home: "Accueil",
    news: "Actualit√©s",
    about: "√Ä propos",
    login: "Connexion",
    logout: "D√©connexion",
    dashboard: "Tableau de bord",
    profile: "Profil",

    // Dashboard
    analysisQueue: "File d'analyse",
    validationQueue: "File de validation",
    analyzeArticle: "Analyser l'article",
    validateArticle: "Valider l'article",

    // Article Analysis
    analyzeThisArticle: "Analyser cet article",
    rateArticleAccuracy:
      "√âvaluez la pr√©cision de l'article et fournissez votre analyse d'expert",
    accuracyRating: "√âvaluation de pr√©cision",
    inaccurate: "Inexact",
    accurate: "Pr√©cis",
    analysisComments: "Commentaires d'analyse",
    provideDetailedAnalysis:
      "Fournissez votre analyse d√©taill√©e de la pr√©cision de l'article, des sources et de tout biais ou omission potentiel...",
    sourceEvaluation: "√âvaluation des sources",
    evaluateSourceCredibility:
      "√âvaluez la cr√©dibilit√© et la pertinence des sources cit√©es dans l'article...",
    submitAnalysis: "Soumettre l'analyse",
    submittingAnalysis: "Soumission de l'analyse...",
    analysisVisibleToValidators:
      "Votre analyse sera visible pour les validateurs et influencera le statut de v√©rification de cet article.",
    beThoroughAndObjective:
      "Veuillez √™tre minutieux et objectif dans votre √©valuation.",

    // Article Validation
    castYourVote: "Votez",
    basedOnArticleAndAnalyses:
      "Sur la base de l'article et des analyses d'experts, cet article est-il vrai ou faux?",
    currentConsensus: "Consensus actuel",
    trueArticleAccurate: "Vrai - L'article est pr√©cis",
    falseArticleInaccurate:
      "Faux - L'article contient des inexactitudes significatives",
    additionalComments: "Commentaires suppl√©mentaires",
    optional: "Optionnel",
    provideAdditionalComments:
      "Fournissez des commentaires suppl√©mentaires pour soutenir votre vote...",
    submitVote: "Soumettre le vote",
    submittingVote: "Soumission du vote...",
    voteContributesToVerification:
      "Votre vote contribuera au statut de v√©rification final de cet article.",
    considerAllEvidence:
      "Veuillez consid√©rer toutes les preuves disponibles avant de voter.",

    // Token Economy
    earnTokens: "Gagnez des jetons",
    qualityAnalysisRewards:
      "Les analyses de qualit√© rapportent plus de jetons. Des √©valuations de pr√©cision plus √©lev√©es et des commentaires d√©taill√©s augmentent vos r√©compenses.",
    validationRewardsExplanation:
      "Votre vote rapporte des jetons en fonction de votre mise et de votre r√©putation. Le consensus avec d'autres validateurs augmente les r√©compenses.",
    analysisSubmitted: "Analyse soumise",
    yourAnalysisHasBeenSubmitted:
      "Votre analyse a √©t√© soumise et est maintenant disponible pour que les validateurs l'examinent.",
    validationSubmitted: "Validation soumise",
    yourVoteHasBeenRecorded:
      "Votre vote a √©t√© enregistr√© et contribuera au statut de v√©rification de l'article.",
    youEarned: "Vous avez gagn√©",
    stakingOpportunity: "Opportunit√© de staking",
    stakeTokensForMoreInfluence:
      "Misez vos jetons pour augmenter votre influence dans le processus de v√©rification et gagner des r√©compenses plus √©lev√©es.",
    stakeMoreTokensForGreaterRewards:
      "Misez plus de jetons pour augmenter votre pouvoir de vote et gagner des r√©compenses plus importantes.",
    claimReward: "R√©clamer la r√©compense",
    analyzeAnotherArticle: "Analyser un autre article",
    validateAnotherArticle: "Valider un autre article",

    // Token Economy Component
    tokenEconomy: "√âconomie de jetons",
    manageTokensAndStaking: "G√©rez vos jetons ETH et votre staking",
    balance: "Solde",
    staked: "Mis√©",
    rewards: "R√©compenses",
    stakingAPY: "APY de staking",
    stake: "Miser",
    unstake: "Retirer",
    amountToStake: "Montant √† miser",
    amountToUnstake: "Montant √† retirer",
    stakingIncreasesInfluence:
      "Le staking augmente votre influence dans le processus de v√©rification et g√©n√®re des r√©compenses.",
    unstakingReducesInfluence:
      "Le retrait r√©duit votre influence mais vous permet d'utiliser vos jetons ailleurs.",
    availableRewards: "R√©compenses disponibles",
    rewardsEarnedBasedOn:
      "Les r√©compenses sont gagn√©es en fonction de votre montant mis√© et de vos contributions √† la plateforme.",
    claimRewards: "R√©clamer les r√©compenses",
    lastUpdated: "Derni√®re mise √† jour",
    viewHistory: "Voir l'historique",
    success: "Succ√®s",
    error: "Erreur",
    pendingRewardsClaimed: "R√©compenses en attente r√©clam√©es",

    // General
    sources: "Sources",
    expertAnalyses: "Analyses d'experts",
    credibilityScore: "Score de cr√©dibilit√©",
    rating: "√©valuation",
    analyzed: "Analys√©",
  },
  // Add translations for other languages as needed
  de: {
    // Basic translations from before
    home: "Startseite",
    news: "Nachrichten",
    about: "√úber uns",
    login: "Anmelden",
    logout: "Abmelden",
    dashboard: "Dashboard",
    profile: "Profil",
    // Add more German translations as needed
  },
  zh: {
    // Basic translations from before
    home: "È¶ñÈ°µ",
    news: "Êñ∞Èóª",
    about: "ÂÖ≥‰∫é",
    login: "ÁôªÂΩï",
    logout: "ÁôªÂá∫",
    dashboard: "‰ª™Ë°®Êùø",
    profile: "‰∏™‰∫∫ËµÑÊñô",
    // Add more Chinese translations as needed
  },
  ar: {
    // Basic translations from before
    home: "ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©",
    news: "ÿßŸÑÿ£ÿÆÿ®ÿßÿ±",
    about: "ÿ≠ŸàŸÑ",
    login: "ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ",
    logout: "ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿÆÿ±Ÿàÿ¨",
    dashboard: "ŸÑŸàÿ≠ÿ© ÿßŸÑÿ™ÿ≠ŸÉŸÖ",
    profile: "ÿßŸÑŸÖŸÑŸÅ ÿßŸÑÿ¥ÿÆÿµŸä",
    // Add more Arabic translations as needed
  },
  hi: {
    // Basic translations from before
    home: "‡§π‡•ã‡§Æ",
    news: "‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞",
    about: "‡§π‡§Æ‡§æ‡§∞‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç",
    login: "‡§≤‡•â‡§ó‡§ø‡§®",
    logout: "‡§≤‡•â‡§ó‡§Ü‡§â‡§ü",
    dashboard: "‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°",
    profile: "‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤",
    // Add more Hindi translations as needed
  },
  ru: {
    // Basic translations from before
    home: "–ì–ª–∞–≤–Ω–∞—è",
    news: "–ù–æ–≤–æ—Å—Ç–∏",
    about: "–û –Ω–∞—Å",
    login: "–í—Ö–æ–¥",
    logout: "–í—ã—Ö–æ–¥",
    dashboard: "–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
    profile: "–ü—Ä–æ—Ñ–∏–ª—å",
    // Add more Russian translations as needed
  },
};

export function LanguageProvider({ children }: { children: ReactNode }) {
  const [currentLanguage, setCurrentLanguage] = useState<Language>(
    languages[0]
  );

  useEffect(() => {
    // Load language preference from localStorage
    const savedLanguage = localStorage.getItem("language");
    if (savedLanguage) {
      const language = languages.find((lang) => lang.code === savedLanguage);
      if (language) {
        setCurrentLanguage(language);
      }
    } else {
      // Try to detect browser language
      const browserLang = navigator.language.split("-")[0];
      const language = languages.find((lang) => lang.code === browserLang);
      if (language) {
        setCurrentLanguage(language);
      }
    }
  }, []);

  const setLanguage = (language: Language) => {
    setCurrentLanguage(language);
    localStorage.setItem("language", language.code);
    document.documentElement.lang = language.code;
  };

  const formatDate = (date: Date | string) => {
    const dateObj = typeof date === "string" ? new Date(date) : date;
    return new Intl.DateTimeFormat(currentLanguage.code, {
      year: "numeric",
      month: "long",
      day: "numeric",
    }).format(dateObj);
  };

  const formatNumber = (num: number) => {
    return new Intl.NumberFormat(currentLanguage.code).format(num);
  };

  const translate = (key: string) => {
    return (
      translations[currentLanguage.code]?.[key] || translations.en[key] || key
    );
  };

  return (
    <LanguageContext.Provider
      value={{
        currentLanguage,
        setLanguage,
        formatDate,
        formatNumber,
        translate,
      }}
    >
      {children}
    </LanguageContext.Provider>
  );
}

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error("useLanguage must be used within a LanguageProvider");
  }
  return context;
};
